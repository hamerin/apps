{"version":3,"sources":["Toggler.js","PartialScore.js","Subject.js","App.js","serviceWorker.js","index.js"],"names":["Toggler","props","positiveClick","bind","negativeClick","event","this","onToggle","isPositive","Button","Group","fluid","onClick","color","icon","Icon","name","React","Component","escapeNaN","x","isNaN","PartialScore","state","score","onScoreChange","onRatioChange","scoreViewed","ratioViewed","ratio","maxScoreViewed","maxScore","value","setState","parseFloat","target","prevProps","prevState","updateScore","calcScore","Form","widths","Field","Input","label","type","onChange","labelPosition","Label","Subject","updatePerScore","onPerRatioChange","updateMidScore","onMidRatioChange","perMaxScore","perRatio","perScore","midMaxScore","midRatio","midScore","totalScore","finalRatio","items","map","w","toFixed","arr","idx","Table","Cell","key","negative","warning","positive","className","Header","as","attached","Segment","celled","unstackable","Row","HeaderCell","Body","content","onDelete","App","subjectList","subjectName","addSubject","removeSubject","updateSubjectName","preventDefault","id","Date","now","filter","elem","Container","style","marginTop","placeholder","width","primary","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yVAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAHJ,E,0DAMLE,GACZC,KAAKL,MAAMM,UAAS,K,oCAGRF,GACZC,KAAKL,MAAMM,UAAS,K,+BAIpB,OAAID,KAAKL,MAAMO,WAEX,kBAACC,EAAA,EAAOC,MAAR,CAAcC,OAAK,GACjB,kBAACF,EAAA,EAAD,CAAQG,QAASN,KAAKJ,cAAeW,MAAM,QAAQC,MAAI,GACrD,kBAACC,EAAA,EAAD,CAAMC,KAAO,UAEf,kBAACP,EAAA,EAAD,CAAQG,QAASN,KAAKF,cAAeU,MAAI,GACvC,kBAACC,EAAA,EAAD,CAAMC,KAAO,YAOnB,kBAACP,EAAA,EAAOC,MAAR,CAAcC,OAAK,GACjB,kBAACF,EAAA,EAAD,CAAQG,QAASN,KAAKJ,cAAeY,MAAI,GACvC,kBAACC,EAAA,EAAD,CAAMC,KAAO,UAEf,kBAACP,EAAA,EAAD,CAAQG,QAASN,KAAKF,cAAeS,MAAM,MAAMC,MAAI,GACnD,kBAACC,EAAA,EAAD,CAAMC,KAAO,gB,GAnCcC,IAAMC,WCC3C,SAASC,EAAUC,GACjB,OAAOC,MAAMD,GAAK,EAAIA,E,IAGHE,E,kDACnB,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDsB,MAAQ,CAACf,YAAY,EAAMgB,MAAO,GACvC,EAAKjB,SAAW,EAAKA,SAASJ,KAAd,gBAChB,EAAKsB,cAAgB,EAAKA,cAActB,KAAnB,gBACrB,EAAKuB,cAAgB,EAAKA,cAAcvB,KAAnB,gBALJ,E,wDASjB,IAAMwB,EAAcR,EAAUb,KAAKiB,MAAMC,OACnCI,EAAcT,EAAUb,KAAKL,MAAM4B,OACnCC,EAAiBX,EAAUb,KAAKL,MAAM8B,UAE5C,OAAOH,GADOtB,KAAKiB,MAAMf,WAAamB,EAAeG,EAAiBH,GACzCrB,KAAKL,MAAM8B,W,+BAGjCC,GACP1B,KAAK2B,SAAS,CAACzB,WAAYwB,M,oCAGf3B,GACZC,KAAK2B,SAAS,CAACT,MAAOU,WAAW7B,EAAM8B,OAAOH,W,oCAGlC3B,GACZC,KAAKL,MAAMyB,cAAcQ,WAAW7B,EAAM8B,OAAOH,U,yCAGhCI,EAAWC,GACzBhB,MAAMf,KAAKL,MAAM4B,QAAUR,MAAMf,KAAKiB,MAAMC,QAE5ClB,KAAKL,MAAM4B,QAAUO,EAAUP,OAC/BvB,KAAKiB,MAAMf,aAAe6B,EAAU7B,YACpCF,KAAKiB,MAAMC,QAAUa,EAAUb,OAChClB,KAAKL,MAAMqC,YAAYhC,KAAKiC,e,+BAK9B,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAK9B,MAAN,CAAY+B,OAAO,SACjB,kBAACD,EAAA,EAAKE,MAAN,KACE,+BAAQpC,KAAKL,MAAMe,MACnB,kBAAC,EAAD,CAASR,WAAYF,KAAKiB,MAAMf,WAAYD,SAAUD,KAAKC,YAE7D,kBAACiC,EAAA,EAAKG,MAAN,CAAYC,MAAM,eAAKZ,MAAO1B,KAAKiB,MAAMC,MAAOqB,KAAK,SAASC,SAAUxC,KAAKmB,gBAC7E,kBAACe,EAAA,EAAKE,MAAN,KACE,4DACA,kBAACC,EAAA,EAAD,CAAOI,cAAc,QAASf,MAAO1B,KAAKL,MAAM4B,MAAOgB,KAAK,SAASC,SAAUxC,KAAKoB,eAClF,gCACA,kBAACsB,EAAA,EAAD,kB,GApD4B/B,IAAMC,WCJ3B+B,E,kDACnB,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IAEDiD,eAAiB,EAAKA,eAAe/C,KAApB,gBACtB,EAAKgD,iBAAmB,EAAKA,iBAAiBhD,KAAtB,gBAExB,EAAKiD,eAAiB,EAAKA,eAAejD,KAApB,gBACtB,EAAKkD,iBAAmB,EAAKA,iBAAiBlD,KAAtB,gBAExB,EAAKoB,MAAQ,CACX+B,YAAa,IACbC,SAAU,IACVC,SAAU,EACVC,YAAa,IACbC,SAAU,EACVC,SAAU,GAfK,E,2DAmBJ3B,GACb1B,KAAK2B,SAAS,CAACuB,SAAUxB,M,uCAGVA,GACf1B,KAAK2B,SAAS,CAACsB,SAAUvB,EAAOsB,YAAatB,EAAO0B,UAAW,IAAI1B,GAAO,M,qCAG7DA,GACb1B,KAAK2B,SAAS,CAAC0B,SAAU3B,M,uCAGVA,GACf1B,KAAK2B,SAAS,CAACyB,SAAU1B,M,+BAGjB,IAAD,OACD4B,EAAatD,KAAKiB,MAAMiC,SAAWlD,KAAKiB,MAAMoC,SAC9CE,EAAa,IAAMvD,KAAKiB,MAAMgC,SAAWjD,KAAKiB,MAAMmC,SACpDI,EAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IAChBC,KAAI,SAAC3C,GAAD,OAAQA,EAAIwC,GAAcC,EAAa,OAC3CE,KAAI,SAAC3C,GAEJ,GADGA,EAAI,IAAGA,EAAI,GACXA,EAAI,IAAK,MAAO,EAAC,GAAM,GAAO,EAAO,OAExC,IAAI4C,EAA0B,IAAtB,EAAKzC,MAAMoC,SAAiBvC,EAAI,EAAKG,MAAMmC,SACnD,MAAO,EAAC,EAAOM,GAAIA,EAAG5C,EAAE6C,QAAQ,OAEjCF,KAAI,SAACG,EAAKC,GAAN,OACH,kBAACC,EAAA,EAAMC,KAAP,CAAYC,IAAKH,EAAKI,SAAUL,EAAI,GAAIM,QAASN,EAAI,GAAIO,SAAUP,EAAI,IAAKA,EAAI,OAGhG,OACE,yBAAKQ,UAAU,WACb,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,SAAS,OACtBvE,KAAKL,MAAMe,MAEd,kBAAC8D,EAAA,EAAD,CAASD,UAAQ,GACf,kBAAC,EAAD,CAAc7D,KAAK,2BACLU,cAAepB,KAAK6C,iBACpBb,YAAahC,KAAK4C,eAClBnB,SAAUzB,KAAKiB,MAAM+B,YACrBzB,MAAOvB,KAAKiB,MAAMgC,WAChC,kBAAC,EAAD,CAAcvC,KAAK,2BACLU,cAAepB,KAAK+C,iBACpBf,YAAahC,KAAK8C,eAClBrB,SAAUzB,KAAKiB,MAAMkC,YACrB5B,MAAOvB,KAAKiB,MAAMmC,WAChC,kBAACU,EAAA,EAAD,CAAOW,QAAM,EAACC,aAAW,GACvB,kBAACZ,EAAA,EAAMO,OAAP,KACE,kBAACP,EAAA,EAAMa,IAAP,KACE,kBAACb,EAAA,EAAMc,WAAP,WACA,kBAACd,EAAA,EAAMc,WAAP,WACA,kBAACd,EAAA,EAAMc,WAAP,WACA,kBAACd,EAAA,EAAMc,WAAP,WACA,kBAACd,EAAA,EAAMc,WAAP,aAIJ,kBAACd,EAAA,EAAMe,KAAP,KACE,kBAACf,EAAA,EAAMa,IAAP,KACGnB,MAKT,kBAACrD,EAAA,EAAD,CAAQoE,SAAS,SAASO,QAAQ,4BAAQxE,QAASN,KAAKL,MAAMoF,gB,GAtFjCpE,IAAMC,WCAtBoE,E,kDACnB,WAAYrF,GAAQ,IAAD,8BACjB,cAAMA,IAEDsB,MAAQ,CAACgE,YAAa,GAAIC,YAAa,IAE5C,EAAKC,WAAa,EAAKA,WAAWtF,KAAhB,gBAClB,EAAKuF,cAAgB,EAAKA,cAAcvF,KAAnB,gBACrB,EAAKwF,kBAAoB,EAAKA,kBAAkBxF,KAAvB,gBAPR,E,uDAURE,GAAQ,IAAD,OAChBA,EAAMuF,iBAEN,IAAMC,EAAKC,KAAKC,MACZR,EAAW,CAAI,kBAAC,EAAD,CAASjB,IAAKuB,EAAIA,GAAIA,EAAI7E,KAAMV,KAAKiB,MAAMiE,YAAaH,SAAU,kBAAM,EAAKK,cAAcG,OAA/F,mBAA0GvF,KAAKiB,MAAMgE,cAEpIjF,KAAK2B,SAAS,CAACsD,YAAaA,EAAaC,YAAa,O,oCAG1CK,GACZvF,KAAK2B,SAAS,CAACsD,YAAajF,KAAKiB,MAAMgE,YAAYS,QAAO,SAAAC,GAAI,OAAIA,EAAKhG,MAAM4F,KAAOA,S,wCAGpExF,GAChBC,KAAK2B,SAAS,CAACuD,YAAanF,EAAM8B,OAAOH,U,+BAIzC,OACE,kBAACkE,EAAA,EAAD,KACE,kBAAC1D,EAAA,EAAD,CAAM2D,MAAO,CAACC,UAAW,UACvB,kBAAC5D,EAAA,EAAK9B,MAAN,CAAYsE,aAAW,EAACvC,OAAQ,GAC9B,kBAACD,EAAA,EAAKG,MAAN,CAAYhC,OAAK,EAAC0F,YAAY,qBAAMrE,MAAO1B,KAAKiB,MAAMiE,YAAa1C,SAAUxC,KAAKqF,kBAAmBW,MAAO,KAC5G,kBAAC9D,EAAA,EAAK/B,OAAN,CAAaE,OAAK,EAAC4F,SAAO,EAACnB,QAAQ,eAAKxE,QAASN,KAAKmF,WAAYa,MAAO,MAG5EhG,KAAKiB,MAAMgE,iB,GArCatE,IAAMC,WCQnBsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.434a80a7.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Icon } from 'semantic-ui-react'\n\nexport default class Toggler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.positiveClick = this.positiveClick.bind(this);\n    this.negativeClick = this.negativeClick.bind(this);\n  }\n\n  positiveClick(event) {\n    this.props.onToggle(true);\n  }\n\n  negativeClick(event) {\n    this.props.onToggle(false);\n  }\n\n  render() {\n    if (this.props.isPositive) {\n      return (\n        <Button.Group fluid>\n          <Button onClick={this.positiveClick} color='green' icon>\n            <Icon name = 'plus'/>\n          </Button>\n          <Button onClick={this.negativeClick} icon>\n            <Icon name = 'minus'/>\n          </Button>\n        </Button.Group>\n      )\n    }\n\n    return (\n      <Button.Group fluid>\n        <Button onClick={this.positiveClick} icon>\n          <Icon name = 'plus'/>\n        </Button>\n        <Button onClick={this.negativeClick} color='red' icon>\n          <Icon name = 'minus'/>\n        </Button>\n      </Button.Group>\n    )\n  }\n}","import React from 'react'\nimport {Form, Label, Input} from 'semantic-ui-react'\nimport Toggler from './Toggler'\n\nfunction escapeNaN(x) {\n  return isNaN(x) ? 0 : x;\n}\n\nexport default class PartialScore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isPositive: true, score: 0}\n    this.onToggle = this.onToggle.bind(this);\n    this.onScoreChange = this.onScoreChange.bind(this);\n    this.onRatioChange = this.onRatioChange.bind(this);\n  }\n\n  calcScore() {\n    const scoreViewed = escapeNaN(this.state.score);\n    const ratioViewed = escapeNaN(this.props.ratio);\n    const maxScoreViewed = escapeNaN(this.props.maxScore);\n    const score = this.state.isPositive ? scoreViewed : (maxScoreViewed - scoreViewed);\n    return ratioViewed * score / this.props.maxScore;\n  }\n\n  onToggle(value) {\n    this.setState({isPositive: value});\n  }\n\n  onScoreChange(event) {\n    this.setState({score: parseFloat(event.target.value)});\n  }\n\n  onRatioChange(event) {\n    this.props.onRatioChange(parseFloat(event.target.value));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(isNaN(this.props.ratio) || isNaN(this.state.score)) return;\n\n    if(this.props.ratio !== prevProps.ratio\n    || this.state.isPositive !== prevState.isPositive\n    || this.state.score !== prevState.score) {\n      this.props.updateScore(this.calcScore());\n    }\n  }\n\n  render() {\n    return (\n      <Form>\n        <Form.Group widths='equal'>\n          <Form.Field>\n            <label>{this.props.name}</label>\n            <Toggler isPositive={this.state.isPositive} onToggle={this.onToggle} />\n          </Form.Field>\n          <Form.Input label='점수' value={this.state.score} type=\"number\" onChange={this.onScoreChange}/>\n          <Form.Field>\n            <label>반영 비율</label>\n            <Input labelPosition='right'  value={this.props.ratio} type=\"number\" onChange={this.onRatioChange}>\n              <input />\n              <Label>%</Label>\n            </Input>\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    )\n  }\n}","import React from 'react'\nimport { Header, Segment, Table, Button } from 'semantic-ui-react'\nimport PartialScore from './PartialScore'\n\nexport default class Subject extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.updatePerScore = this.updatePerScore.bind(this);\n    this.onPerRatioChange = this.onPerRatioChange.bind(this);\n  \n    this.updateMidScore = this.updateMidScore.bind(this);\n    this.onMidRatioChange = this.onMidRatioChange.bind(this);\n\n    this.state = {\n      perMaxScore: 100,\n      perRatio: 100,\n      perScore: 0,\n      midMaxScore: 100,\n      midRatio: 0,\n      midScore: 0,\n    }\n  }\n\n  updatePerScore(value) {\n    this.setState({perScore: value});\n  }\n\n  onPerRatioChange(value) {\n    this.setState({perRatio: value, perMaxScore: value, midRatio: (100-value)/2})\n  }\n  \n  updateMidScore(value) {\n    this.setState({midScore: value});\n  }\n\n  onMidRatioChange(value) {\n    this.setState({midRatio: value})\n  }\n\n  render() {\n    const totalScore = this.state.perScore + this.state.midScore;\n    const finalRatio = 100 - this.state.perRatio - this.state.midRatio;\n    const items = [90, 85, 80, 75, 70]\n                  .map((x) => (x - totalScore) / finalRatio * 100)\n                  .map((x) => {\n                    if(x < 0) x = 0;\n                    if(x > 100) return [true, false, false, \"INF\"];\n\n                    let w = this.state.midScore * 100 < x * this.state.midRatio\n                    return [false, w, !w, x.toFixed(1)];\n                  })\n                  .map((arr, idx) => (\n                    <Table.Cell key={idx} negative={arr[0]} warning={arr[1]} positive={arr[2]}>{arr[3]}</Table.Cell>\n                  ))\n\n    return (\n      <div className=\"subject\">\n        <Header as='h5' attached='top'>\n          {this.props.name}\n        </Header>\n        <Segment attached>\n          <PartialScore name=\"수행평가\"\n                        onRatioChange={this.onPerRatioChange}\n                        updateScore={this.updatePerScore}\n                        maxScore={this.state.perMaxScore}\n                        ratio={this.state.perRatio}/>\n          <PartialScore name=\"중간고사\"\n                        onRatioChange={this.onMidRatioChange}\n                        updateScore={this.updateMidScore}\n                        maxScore={this.state.midMaxScore}\n                        ratio={this.state.midRatio}/>\n          <Table celled unstackable>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>A+</Table.HeaderCell>\n                <Table.HeaderCell>A0</Table.HeaderCell>\n                <Table.HeaderCell>A-</Table.HeaderCell>\n                <Table.HeaderCell>B+</Table.HeaderCell>\n                <Table.HeaderCell>B0</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              <Table.Row>\n                {items}\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </Segment>\n        <Button attached='bottom' content=\"과목 삭제\" onClick={this.props.onDelete}/>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { Container, Form } from 'semantic-ui-react'\nimport Subject from './Subject'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {subjectList: [], subjectName: \"\"};\n\n    this.addSubject = this.addSubject.bind(this);\n    this.removeSubject = this.removeSubject.bind(this);\n    this.updateSubjectName = this.updateSubjectName.bind(this);\n  }\n\n  addSubject(event) {\n    event.preventDefault();\n\n    const id = Date.now();\n    let subjectList = [<Subject key={id} id={id} name={this.state.subjectName} onDelete={() => this.removeSubject(id)}/>, ...this.state.subjectList];\n    \n    this.setState({subjectList: subjectList, subjectName: \"\"});\n  }\n\n  removeSubject(id) {\n    this.setState({subjectList: this.state.subjectList.filter(elem => elem.props.id !== id)});\n  }\n\n  updateSubjectName(event) {\n    this.setState({subjectName: event.target.value});\n  }\n\n  render() {\n    return (\n      <Container>\n        <Form style={{marginTop: \"2.5em\"}}>\n          <Form.Group unstackable widths={2}>\n            <Form.Input fluid placeholder='과목명' value={this.state.subjectName} onChange={this.updateSubjectName} width={12} />\n            <Form.Button fluid primary content='추가' onClick={this.addSubject} width={4}/>\n          </Form.Group>\n        </Form>\n        {this.state.subjectList}\n      </Container>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}